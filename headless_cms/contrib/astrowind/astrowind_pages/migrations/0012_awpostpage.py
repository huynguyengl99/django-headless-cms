# Generated by Django 4.2.11 on 2024-05-17 16:49

import django.db.models.deletion
import localized_fields.fields.char_field
import localized_fields.fields.text_field
import localized_fields.mixins
import psqlextra.manager.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("reversion", "0002_add_index_on_version_for_content_type_and_db"),
        ("astrowind_pages", "0011_alter_awaboutfeature2through_about_page_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AWPostPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    localized_fields.fields.text_field.LocalizedTextField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "subtitle",
                    localized_fields.fields.text_field.LocalizedTextField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "back_to_blog_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "related_posts_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "view_all_posts_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "tag_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "category_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "prev_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "next_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "page_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "posts_by_tag_text",
                    localized_fields.fields.char_field.LocalizedCharField(
                        blank=True, default=dict, null=True, required=[]
                    ),
                ),
                (
                    "published_version",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reversion.version",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(localized_fields.mixins.AtomicSlugRetryMixin, models.Model),
            managers=[
                ("objects", psqlextra.manager.manager.PostgresManager()),
            ],
        ),
    ]
